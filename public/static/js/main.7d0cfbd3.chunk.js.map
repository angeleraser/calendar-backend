{"version":3,"sources":["helpers/fetchData.js","types/types.js","actions/auth.js","components/hooks/useForm.js","components/auth/LoginForm.js","components/auth/RegisterForm.js","components/auth/LoginScreen.js","helpers/prepareEvent.js","actions/calendar.js","components/ui/Navbar.js","components/ui/DeleteEventFab.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/helpers.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/calendar/CalendarScreen.js","routers/PrivateRoute.js","routers/PublicRoutes.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","asyncFetchData","endpoint","method","body","token","url","headers","fetch","JSON","stringify","TYPES","finishChecking","type","login","name","uid","payload","logout","initDate","moment","minutes","seconds","add","lastDate","clone","useForm","initState","useState","formValues","setFormValues","toDate","startDate","setStartDate","endDate","setEndDate","handleInputChange","target","value","reset","handleSubmit","callback","e","preventDefault","LoginForm","loginEmail","loginPassword","loginFormValues","handleLoginInputChange","handleLoginSubmit","dispatch","useDispatch","className","onSubmit","email","password","a","console","log","response","json","ok","msg","errors","localStorage","setItem","Date","getTime","Swal","fire","placeholder","onChange","RegisterForm","registerName","registerEmail","registerPassword1","registerPassword2","registerFormValues","handleRegisterInputChange","handleRegisterSubmit","username","LoginScreen","prepareEvents","events","map","event","start","end","eventAddNew","eventUpdated","eventDeleted","eventLoaded","Navbar","useSelector","auth","onClick","clear","DeleteEventFab","getState","id","calendar","activeEvent","getItem","data","CalendarEvent","title","user","openModal","closeModal","eventClearActiveEvent","onDoubleClick","onSelectEvent","eventSetActive","onSelectSlot","onChangeView","setLastView","eventStyleGetter","activeUser","isSelected","style","backgroundColor","_id","borderRadius","opacity","display","color","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","CalendarModal","notes","handleInputValue","resetForm","isInvalid","setInvalid","isModalOpen","ui","useEffect","isOpen","overlayClassName","onRequestClose","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","eventStartUpdate","allowOutsideClick","willOpen","showLoading","newEvent","close","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","localizer","momentLocalizer","CalendarScreen","lastView","startAccessor","endAccessor","eventPropGetter","onDoubleClickEvent","selectable","onView","view","components","PrivateRoute","path","Component","component","isAuthenticated","rest","props","to","PublicRoute","AppRouter","checking","exact","rootReducer","combineReducers","state","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d0cfbd3.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\nexport const asyncFetchData = (\r\n  endpoint,\r\n  { method = \"GET\", body, token } = {}\r\n) => {\r\n  const url = `${baseURL}/${endpoint}`,\r\n    headers = {\r\n      \"Content-type\": \"application/json\",\r\n    };\r\n  if (token) {\r\n    headers[\"x-token\"] = token;\r\n  }\r\n  if (method === \"GET\") {\r\n    return fetch(url, {\r\n      method,\r\n      headers,\r\n    });\r\n  } else {\r\n    return fetch(url, {\r\n      method,\r\n      headers,\r\n      body: JSON.stringify(body),\r\n    });\r\n  }\r\n};\r\n","export const TYPES = {\r\n  uiOpenModal: \"[UI] Open Modal\",\r\n  uiCloseModal: \"[UI] Close Modal\",\r\n\r\n  eventSetActive: \"[Event] Set active\",\r\n  eventLogoutCleanup: \"[Event] Logout cleanup\",\r\n  eventClearActiveEvent: \"[Event] Clear active event\",\r\n  eventLoaded: \"[Event] Loaded\",\r\n  eventStartAddNew: \"[Event] Start add new\",\r\n  eventAddNew: \"[Event] Add new\",\r\n  eventUpdated: \"[Event] Updated\",\r\n  eventDeleted: \"[Event] Deleted\",\r\n\r\n  authChecking: \"[Auth] Checking login state\",\r\n  authFinishChecking: \"[Auth] Finish checking login state\",\r\n  authStartLogin: \"[Auth] Start login\",\r\n  authLogin: \"[Auth] Login\",\r\n  authStartRegister: \"[Auth] Start register\",\r\n  authStartTokenRenew: \"[Auth] Start token renew\",\r\n  authLogout: \"[Auth] Logout\",\r\n};\r\n","/* eslint-disable no-unused-vars */\r\nimport Swal from \"sweetalert2\";\r\nimport { asyncFetchData } from \"../helpers/fetchData\";\r\nimport { TYPES } from \"../types/types\";\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log(\"Login...\");\r\n      const response = await asyncFetchData(\"auth\", {\r\n        method: \"POST\",\r\n        body: {\r\n          email,\r\n          password,\r\n        },\r\n      });\r\n      const { name, uid, token, ok, msg, errors } = await response.json();\r\n      // Save token to controls if is expired\r\n      if (ok) {\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n        dispatch(login(name, uid));\r\n      } else {\r\n        Swal.fire(\"Error\", msg, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      console.log(\"Finish login!\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const startRegister = (email, name, password) => {\r\n  return async (dispatch) => {\r\n    console.log(\"Register...\");\r\n    try {\r\n      const response = await asyncFetchData(\"auth/register\", {\r\n        method: \"POST\",\r\n        body: {\r\n          name,\r\n          password,\r\n          email,\r\n        },\r\n      });\r\n      const { uid, name: username, token, ok, msg } = await response.json();\r\n      if (ok) {\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n        dispatch(login(username, uid));\r\n        console.log(\"Register finished!\");\r\n      } else {\r\n        Swal.fire(\"Error\", msg, \"error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"Register failed :(\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log(\"Checking token...\");\r\n      const response = await asyncFetchData(\"auth/renew-token\", {\r\n        method: \"GET\",\r\n        token: localStorage.getItem(\"token\") || \"\",\r\n      });\r\n      const data = await response.json();\r\n      if (data.ok) {\r\n        dispatch(login(data.name, data.uid));\r\n        console.log(\"Checking token done!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"Checking token failed :(\");\r\n    } finally {\r\n      dispatch(finishChecking());\r\n      console.log(\"Checking token finished\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const finishChecking = () => ({\r\n  type: TYPES.authFinishChecking,\r\n});\r\n\r\nexport const login = (name, uid) => ({\r\n  type: TYPES.authLogin,\r\n  payload: {\r\n    name,\r\n    uid,\r\n  },\r\n});\r\n\r\n// Se puede retonar dispatch si es necesario hacer mas operaciones o acciones incluso si no son asincronas\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.clear();\r\n    dispatch(logout());\r\n  };\r\n};\r\n\r\nexport const logout = () => ({\r\n  type: TYPES.authLogout,\r\n});\r\n","import { useState } from \"react\";\r\nimport moment from \"moment\";\r\nconst initDate = moment().minutes(0).seconds(0).add(1, \"hours\");\r\nconst lastDate = moment().clone().minutes(0).seconds(0).add(2, \"hours\");\r\nexport const useForm = (initState = {}) => {\r\n  const [formValues, setFormValues] = useState(initState);\r\n  const [startDate, setStartDate] = useState(initDate.toDate());\r\n  const [endDate, setEndDate] = useState(lastDate.toDate());\r\n  const handleInputChange = ({ target }) => {\r\n      setFormValues({\r\n        ...formValues,\r\n        [target.name]: target.value,\r\n      });\r\n    },\r\n    reset = () => {\r\n      setFormValues(initState);\r\n      setStartDate(initDate.toDate());\r\n      setEndDate(lastDate.toDate());\r\n    },\r\n    handleSubmit = (callback) => {\r\n      return (e) => {\r\n        e.preventDefault();\r\n        callback();\r\n      };\r\n    };\r\n  return [\r\n    [formValues, startDate, endDate],\r\n    [handleInputChange, setStartDate, setEndDate, setFormValues],\r\n    handleSubmit,\r\n    reset,\r\n  ];\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { startLogin } from \"../../actions/auth\";\r\nimport { useForm } from \"../hooks/useForm\";\r\n\r\nexport const LoginForm = () => {\r\n  const [\r\n      [loginFormValues],\r\n      [handleLoginInputChange],\r\n      handleLoginSubmit,\r\n    ] = useForm({\r\n      loginEmail: \"pedrosete@gmail.com\",\r\n      loginPassword: \"123456\",\r\n    }),\r\n    dispatch = useDispatch(),\r\n    { loginEmail, loginPassword } = loginFormValues,\r\n    dispatchLoginActions = () => {\r\n      dispatch(startLogin(loginEmail, loginPassword));\r\n    };\r\n  return (\r\n    <div className=\"col-md-6 login-form-1\">\r\n      <h3>Ingreso</h3>\r\n      <form onSubmit={handleLoginSubmit(dispatchLoginActions)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Correo\"\r\n            name=\"loginEmail\"\r\n            value={loginEmail}\r\n            onChange={handleLoginInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Contraseña\"\r\n            name=\"loginPassword\"\r\n            value={loginPassword}\r\n            onChange={handleLoginInputChange}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from \"sweetalert2\";\r\nimport { startRegister } from \"../../actions/auth\";\r\nimport { useForm } from \"../hooks/useForm\";\r\n\r\nexport const RegisterForm = () => {\r\n  const [\r\n      [registerFormValues],\r\n      [handleRegisterInputChange],\r\n      handleRegisterSubmit,\r\n    ] = useForm({\r\n      registerName: \"Angelo\",\r\n      registerEmail: \"angelo123@gmail.com\",\r\n      registerPassword1: \"123456\",\r\n      registerPassword2: \"123456\",\r\n    }),\r\n    {\r\n      registerName,\r\n      registerEmail,\r\n      registerPassword1,\r\n      registerPassword2,\r\n    } = registerFormValues,\r\n    dispatch = useDispatch(),\r\n    dispatchRegisterActions = () => {\r\n      if (registerPassword1 === registerPassword2) {\r\n        dispatch(startRegister(registerEmail, registerName, registerPassword1));\r\n      } else {\r\n        Swal.fire(\"Error\", \"Las contrasenas deben ser iguales\", \"error\");\r\n      }\r\n    };\r\n  return (\r\n    <div className=\"col-md-6 login-form-2\">\r\n      <h3>Registro</h3>\r\n      <form onSubmit={handleRegisterSubmit(dispatchRegisterActions)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Nombre\"\r\n            value={registerName}\r\n            onChange={handleRegisterInputChange}\r\n            name=\"registerName\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            placeholder=\"Correo\"\r\n            value={registerEmail}\r\n            onChange={handleRegisterInputChange}\r\n            name=\"registerEmail\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Contraseña\"\r\n            value={registerPassword1}\r\n            onChange={handleRegisterInputChange}\r\n            name=\"registerPassword1\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Repita la contraseña\"\r\n            value={registerPassword2}\r\n            onChange={handleRegisterInputChange}\r\n            name=\"registerPassword2\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <input type=\"submit\" className=\"btnSubmit\" value=\"Crear cuenta\" />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./login.css\";\r\nimport { LoginForm } from \"./LoginForm\";\r\nimport { RegisterForm } from \"./RegisterForm\";\r\n\r\nexport const LoginScreen = () => {\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <LoginForm />\r\n        <RegisterForm />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import moment from \"moment\";\r\nexport const prepareEvents = (events) =>\r\n  events.map((event) => ({\r\n    ...event,\r\n    start: moment(event.start).toDate(),\r\n    end: moment(event.end).toDate(),\r\n  }));\r\n","/* eslint-disable no-unused-vars */\r\nimport Swal from \"sweetalert2\";\r\nimport { asyncFetchData } from \"../helpers/fetchData\";\r\nimport { prepareEvents } from \"../helpers/prepareEvent\";\r\nimport { TYPES } from \"../types/types\";\r\n\r\nconst eventAddNew = (event) => {\r\n  return {\r\n    type: TYPES.eventAddNew,\r\n    payload: event,\r\n  };\r\n};\r\n\r\nexport const eventStartAddNew = (event) => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      console.log(\"Saving event...\");\r\n      Swal.fire({\r\n        title: \"Guardando evento...\",\r\n        allowOutsideClick: false,\r\n        willOpen() {\r\n          Swal.showLoading();\r\n        },\r\n      });\r\n      const response = await asyncFetchData(\"events\", {\r\n        method: \"POST\",\r\n        body: {\r\n          ...event,\r\n        },\r\n        token: localStorage.getItem(\"token\") || \"\",\r\n      });\r\n      const data = await response.json();\r\n      if (data.ok) {\r\n        const {\r\n          auth: { uid, name },\r\n        } = getState();\r\n        const newEvent = {\r\n          ...event,\r\n          id: data.event.id,\r\n          user: {\r\n            _id: uid,\r\n            name,\r\n          },\r\n        };\r\n        dispatch(eventAddNew(newEvent));\r\n        console.log(\"Saving event done!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"Saving event failed :(\");\r\n    } finally {\r\n      console.log(\"Saving event process finished\");\r\n      Swal.close();\r\n    }\r\n  };\r\n};\r\n\r\nexport const eventStartDelete = () => {\r\n  return async (dispatch, getState) => {\r\n    try {\r\n      const {\r\n        activeEvent: { id },\r\n      } = getState().calendar;\r\n      console.log(\"Deleting event...\");\r\n      const response = await asyncFetchData(`events/${id}`, {\r\n        method: \"DELETE\",\r\n        token: localStorage.getItem(\"token\") || \"\",\r\n      });\r\n      const data = await response.json();\r\n      if (data.ok) {\r\n        dispatch(eventDeleted());\r\n        console.log(\"Deleting event done!\");\r\n      } else {\r\n        Swal.fire(\"Error\", data.msg, \"error\");\r\n        console.log(\"Deleting event failed error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"Deleting event failed :(\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const eventStartUpdate = (event) => {\r\n  return async (dispatch) => {\r\n    try {\r\n      console.log(\"Updating event...\");\r\n      const response = await asyncFetchData(`events/${event.id}`, {\r\n        method: \"PUT\",\r\n        body: {\r\n          ...event,\r\n        },\r\n        token: localStorage.getItem(\"token\") || \"\",\r\n      });\r\n      const data = await response.json();\r\n      if (data.ok) {\r\n        dispatch(eventUpdated(event));\r\n        console.log(\"Updating event done!\");\r\n      } else {\r\n        Swal.fire(\"Error\", data.msg, \"error\");\r\n        console.log(\"Updating event failed error\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"Updating event failed :(\");\r\n    }\r\n  };\r\n};\r\n\r\nexport const eventSetActive = (event) => {\r\n  return {\r\n    type: TYPES.eventSetActive,\r\n    payload: event,\r\n  };\r\n};\r\n\r\nexport const eventUpdated = (event) => ({\r\n  type: TYPES.eventUpdated,\r\n  payload: event,\r\n});\r\n\r\nexport const eventDeleted = () => ({\r\n  type: TYPES.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n  return async (dispatch) => {\r\n    console.log(\"Loading events...\");\r\n    try {\r\n      const response = await asyncFetchData(\"events\", {\r\n        method: \"GET\",\r\n        token: localStorage.getItem(\"token\") || \"\",\r\n      });\r\n      const { events } = await response.json();\r\n      dispatch(eventLoaded(prepareEvents(events)));\r\n      console.log(\"Loading events sucess!\");\r\n    } catch (error) {\r\n      console.log(error);\r\n      console.log(\"Loading events failed :(\");\r\n    } finally {\r\n      console.log(\"Loading events process finished!\");\r\n    }\r\n  };\r\n};\r\n\r\nconst eventLoaded = (events) => {\r\n  return {\r\n    type: TYPES.eventLoaded,\r\n    payload: events,\r\n  };\r\n};\r\n\r\nexport const eventLogoutCleanup = () => ({ type: TYPES.eventLogoutCleanup });\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { startLogout } from \"../../actions/auth\";\r\nimport { eventLogoutCleanup } from \"../../actions/calendar\";\r\nexport const Navbar = () => {\r\n  const { name: username } = useSelector(({ auth }) => auth);\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark mb-4\">\r\n      <span className=\"navbar-brand\">{username}</span>\r\n      <button\r\n        onClick={() => {\r\n          dispatch(startLogout());\r\n          dispatch(eventLogoutCleanup());\r\n        }}\r\n        className=\"btn btn-outline-danger\">\r\n        Salir\r\n      </button>\r\n    </nav>\r\n  );\r\n};\r\n","import { useDispatch } from \"react-redux\";\r\nimport { eventStartDelete } from \"../../actions/calendar\";\r\nexport const DeleteEventFab = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        dispatch(eventStartDelete());\r\n      }}\r\n      className=\"fab-danger btn btn-danger\">\r\n      Delete <i className=\"fa fa-trash\"></i>\r\n    </button>\r\n  );\r\n};\r\n","import React from \"react\";\r\nexport const CalendarEvent = ({ event }) => {\r\n  return (\r\n    <div className=\"flex-column align-items-start d-flex\">\r\n      <strong>{event.title}</strong>\r\n      <span className='mt-2'>- {event.user.name}</span>\r\n    </div>\r\n  );\r\n};\r\n","import { TYPES } from \"../types/types\";\r\n\r\nexport const openModal = () => ({\r\n  type: TYPES.uiOpenModal,\r\n});\r\n\r\nexport const closeModal = () => ({\r\n  type: TYPES.uiCloseModal,\r\n});\r\n\r\nexport const eventClearActiveEvent= () => {\r\n  return {\r\n    type: TYPES.eventClearActiveEvent,\r\n  };\r\n};\r\n","import { eventSetActive } from \"../../actions/calendar\";\r\nimport { eventClearActiveEvent, openModal } from \"../../actions/ui\";\r\n\r\nexport const onDoubleClick = (dispatch) => {\r\n  return (event) => {\r\n    dispatch(openModal());\r\n  };\r\n};\r\nexport const onSelectEvent = (dispatch) => {\r\n  return (event) => {\r\n    dispatch(eventSetActive({ ...event }));\r\n  };\r\n};\r\nexport const onSelectSlot = (dispatch) => {\r\n  return (e) => {\r\n    dispatch(eventClearActiveEvent());\r\n  };\r\n};\r\nexport const onChangeView = (setLastView) => {\r\n  return (e) => {\r\n    setLastView(e);\r\n    localStorage.setItem(\"last-view\", e);\r\n  };\r\n};\r\nexport const eventStyleGetter = (activeUser) => {\r\n  return (event, start, end, isSelected) => {\r\n    const style = {\r\n      backgroundColor: activeUser === event.user._id ? \"#367cf7\" : \"#465660\",\r\n      borderRadius: \"0px\",\r\n      opacity: \"0.8\",\r\n      display: \"block\",\r\n      color: \"#fff\",\r\n    };\r\n    return {\r\n      style,\r\n    };\r\n  };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport moment from \"moment\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport { useForm } from \"../hooks/useForm\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { closeModal, eventClearActiveEvent } from \"../../actions/ui\";\r\nimport {\r\n  eventStartAddNew,\r\n  eventStartUpdate,\r\n} from \"../../actions/calendar\";\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\nModal.setAppElement(\"#root\");\r\nexport const CalendarModal = () => {\r\n  const [\r\n      formValues,\r\n      [handleInputValue, setStartDate, setEndDate, setFormValues],\r\n      handleSubmit,\r\n      resetForm,\r\n    ] = useForm({\r\n      title: \"\",\r\n      notes: \"\",\r\n    }),\r\n    [{ title, notes }, startDate, endDate] = formValues,\r\n    [isInvalid, setInvalid] = useState(false),\r\n    { isModalOpen } = useSelector(({ ui }) => ui),\r\n    { activeEvent } = useSelector(({ calendar }) => calendar),\r\n    dispatch = useDispatch(),\r\n    onRequestcloseModal = () => {\r\n      dispatch(eventClearActiveEvent());\r\n      dispatch(closeModal());\r\n      resetForm();\r\n    },\r\n    validateForm = () => {\r\n      const momentStart = moment(startDate),\r\n        momentEnd = moment(endDate);\r\n      if (momentStart.isSameOrAfter(momentEnd)) {\r\n        return Swal.fire(\r\n          \"Error\",\r\n          \"Fecha de inicio debe ser menor a la fecha de fin\",\r\n          \"error\"\r\n        );\r\n      } else if (title.trim().length < 2) {\r\n        setInvalid(true);\r\n      } else {\r\n        const event = {\r\n          title,\r\n          notes,\r\n          start: startDate,\r\n          end: endDate,\r\n        };\r\n        if (activeEvent) {\r\n          dispatch(\r\n            eventStartUpdate({\r\n              ...activeEvent,\r\n              title,\r\n              notes,\r\n              start: startDate,\r\n              end: endDate,\r\n            })\r\n          );\r\n        } else {\r\n          dispatch(eventStartAddNew(event));\r\n        }\r\n        resetForm();\r\n        dispatch(eventClearActiveEvent());\r\n        dispatch(closeModal());\r\n        setInvalid(false);\r\n      }\r\n    };\r\n  // Reset or update form if active note\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      // Update current form values with the event selected values\r\n      const { title, notes, start, end } = activeEvent;\r\n      setFormValues({\r\n        title,\r\n        notes,\r\n      });\r\n      setStartDate(start);\r\n      setEndDate(end);\r\n    } else {\r\n      resetForm();\r\n    }\r\n  }, [activeEvent]);\r\n  return (\r\n    <Modal\r\n      isOpen={isModalOpen}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n      onRequestClose={onRequestcloseModal}\r\n      closeTimeoutMS={200}\r\n      style={customStyles}>\r\n      <h1> Nuevo evento </h1>\r\n      <hr />\r\n      <form onSubmit={handleSubmit(validateForm)} className=\"container\">\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={setStartDate}\r\n            value={startDate}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={setEndDate}\r\n            value={endDate}\r\n            minDate={startDate}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${isInvalid ? \"is-invalid\" : \"\"}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            value={title}\r\n            onChange={handleInputValue}\r\n            autoComplete=\"off\"\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"5\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputValue}></textarea>\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Información adicional\r\n          </small>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { openModal } from \"../../actions/ui\";\r\n\r\nexport const AddNewFab = () => {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        dispatch(openModal());\r\n      }}\r\n      className=\"fab btn btn-primary\">\r\n      <i className=\"fa fa-plus\"></i>\r\n    </button>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Navbar } from \"../ui/Navbar\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { Calendar, momentLocalizer } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport { DeleteEventFab } from \"../ui/DeleteEventFab\";\r\nimport { CalendarEvent } from \"./CalendarEvent\";\r\nimport {\r\n  eventStyleGetter,\r\n  onChangeView,\r\n  onDoubleClick,\r\n  onSelectEvent,\r\n  onSelectSlot,\r\n} from \"./helpers\";\r\nimport { CalendarModal } from \"./CalendarModal\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AddNewFab } from \"../ui/AddNewFab\";\r\nimport { eventStartLoading } from \"../../actions/calendar\";\r\nconst localizer = momentLocalizer(moment);\r\nexport const CalendarScreen = () => {\r\n    useEffect(() => {\r\n    dispatch(eventStartLoading());\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const [lastView, setLastView] = useState(\r\n      localStorage.getItem(\"last-view\") || \"month\"\r\n    ),\r\n    { events, activeEvent } = useSelector(({ calendar }) => calendar);\r\n  const dispatch = useDispatch();\r\n  const { uid: activeUser} = useSelector(({ auth }) => auth);\r\n  return (\r\n    <div className=\"calendar-screen\">\r\n      <Navbar />\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        eventPropGetter={eventStyleGetter(activeUser)}\r\n        onDoubleClickEvent={onDoubleClick(dispatch)}\r\n        onSelectEvent={onSelectEvent(dispatch)}\r\n        onSelectSlot={onSelectSlot(dispatch)}\r\n        selectable={true}\r\n        onView={onChangeView(setLastView)}\r\n        view={lastView}\r\n        components={{\r\n          event: CalendarEvent,\r\n        }}\r\n      />\r\n      {!!activeEvent && <DeleteEventFab />}\r\n      <AddNewFab />\r\n      <CalendarModal />\r\n    </div>\r\n  );\r\n};\r\n","import { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport const PrivateRoute = ({\r\n  path,\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n    \r\n      path={path}\r\n      {...rest}\r\n      component={(props) => {\r\n        return isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import { Redirect, Route } from \"react-router-dom\";\r\nexport const PublicRoute = ({\r\n  path,\r\n  component: Component,\r\n  isAuthenticated,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      path={path}\r\n      {...rest}\r\n      component={(props) => {\r\n        return !isAuthenticated ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { BrowserRouter, Redirect, Switch } from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport { CalendarScreen } from \"../components/calendar/CalendarScreen\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoutes\";\r\nexport const AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector(({ auth }) => auth);\r\n  // Check if token is valid\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n  if (checking) {\r\n    return <h1>Loading...</h1>;\r\n  }\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <PublicRoute\r\n          isAuthenticated={!!uid}\r\n          exact\r\n          path=\"/login\"\r\n          component={LoginScreen}\r\n        />\r\n        <PrivateRoute\r\n          isAuthenticated={!!uid}\r\n          exact\r\n          path=\"/\"\r\n          component={CalendarScreen}\r\n        />\r\n        <Redirect to=\"/login\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n","import { TYPES } from \"../types/types\";\r\n\r\nconst initState = {\r\n  checking: true,\r\n  uid: null,\r\n  name: null,\r\n};\r\n\r\nexport const authReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.authLogin:\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        checking: false,\r\n      };\r\n    case TYPES.authFinishChecking:\r\n      return {\r\n        ...state,\r\n        checking: false,\r\n      };\r\n    case TYPES.authLogout:\r\n      return {\r\n        checking: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TYPES } from \"../types/types\";\r\nconst initState = {\r\n  events: [],\r\n  activeEvent: null,\r\n};\r\n\r\nexport const calendarReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload,\r\n      };\r\n    case TYPES.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      };\r\n    case TYPES.eventClearActiveEvent:\r\n      return {\r\n        ...state,\r\n        activeEvent: null,\r\n      };\r\n    case TYPES.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((e) =>\r\n          e.id === action.payload.id ? action.payload : e\r\n        ),\r\n      };\r\n    case TYPES.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((e) => e.id !== state.activeEvent.id),\r\n        activeEvent: null,\r\n      };\r\n    case TYPES.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload],\r\n      };\r\n    case TYPES.eventLogoutCleanup:\r\n      return { ...initState };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { TYPES } from \"../types/types\";\r\n\r\nconst initState = {\r\n  isModalOpen: false,\r\n};\r\nexport const uiReducer = (state = initState, action) => {\r\n  switch (action.type) {\r\n    case TYPES.uiOpenModal:\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n      };\r\n    case TYPES.uiCloseModal:\r\n      return {\r\n        ...state,\r\n        isModalOpen: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\nexport const rootReducer = combineReducers({\r\n  ui: uiReducer,\r\n  calendar: calendarReducer,\r\n  auth: authReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { store } from \"./store/store\";\r\nexport const CalendarApp = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <AppRouter />\r\n    </Provider>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CalendarApp } from \"./CalendarApp\";\nimport \"./styles.css\";\nReactDOM.render(<CalendarApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}